/**
 * drey - Nested access extension for underscore and lodash
 *
 * @version   0.1.0
 * @link      https://github.com/danielstjules/drey
 * @author    Daniel St. Jules <danielst.jules@gmail.com>
 * @license   MIT
 */

!function(n){"use strict";var e={};e.getIn=function(n,e,t){var r,i;if("undefined"==typeof e)return n;for(e instanceof Array||(e=(""+e).split(".")),i=e.length,r=0;i>r;r++){if(!(e[r]in n))return t;n=n[e[r]]}return n},e.isIn=function(n,e){var t,r;if("undefined"==typeof e)return!1;for(e instanceof Array||(e=(""+e).split(".")),r=e.length,t=0;r>t;t++){if(!(e[t]in n))return!1;n=n[e[t]]}return!0},e.invokeIn=function(n,t){var r,i,f;if("undefined"==typeof t)return n;if(i=e.getIn(n,t),"function"!=typeof i)throw new Error("Could not find fn to invoke in object path: "+t);if(f=[],arguments.length>2)for(r=2;r<arguments.length;r++)f.push(arguments[r]);return i.apply(null,f),n},e.updateIn=function(n,e,t){var r,i,f;if("undefined"==typeof e)return n;for(e instanceof Array||(e=(""+e).split(".")),f=n,i=e.length,r=0;i>r;r++){if(!(e[r]in f))throw new Error("Could not find path in object to update: "+e);i-1>r&&(f=f[e[r]])}return f[e[r-1]]=t,n},e.setIn=function(n,e,t){var r,i,f;if("undefined"==typeof e)return n;for(e instanceof Array||(e=(""+e).split(".")),f=n,i=e.length,r=0;i>r;r++)"object"!=typeof f[e[r]]&&(f[e[r]]={}),i-1>r&&(f=f[e[r]]);return f[e[r-1]]=t,n},"undefined"!=typeof exports&&("undefined"!=typeof module&&module.exports?module.exports=e:exports.drey=e),"function"==typeof define&&"object"==typeof define.amd&&define.amd&&define("drey",[],function(){return e}),n._&&n._.mixin?n._.mixin(e):n.drey=e}(this);